body {
    --rainbow-border-size: 3px
}

/**
 * `@property` is required for the animation to work.
 * Without it, the angle values won’t interpolate properly.
 *
 * @see https://dev.to/afif/we-can-finally-animate-css-gradient-kdk
 */
@property --bg-angle {
    inherits: false;
    initial-value: 0deg;
    syntax: "<angle>";
}

/**
 * To animate the gradient, we set the custom property to 1 full
 * rotation. The animation starts at the default value of `0deg`.
 */
@keyframes spin {
    to {
        --bg-angle: 360deg;
    }
}

#my_ext-star_container {
    position: relative;

    animation: spin 2.5s infinite linear;

    /**
     * Using `background-origin` we can create a “border” using two gradients. And to
     * make the gradients better-looking, we use OKLCH.
     *
     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/background-origin
     * @see https://evilmartians.com/chronicles/oklch-in-css-why-quit-rgb-hsl
     */
    background:
        /* Background colors don’t work with `background-origin`, so use a gradient.
            linear-gradient(
                    to bottom,
                    oklch(0.1 0.2 240 / 0.95),
                    oklch(0.1 0.2 240 / 0.95)
            )
        */
    radial-gradient(
            black,
            rgba(50, 50, 50, 0.3)
    )
    padding-box, /* ends at inner border edges */
    conic-gradient(
            from var(--bg-angle) in oklch longer hue,
            oklch(0.85 0.37 0) 0 0
    )
    border-box; /* extends to outer border edges */

    /* a clear border lets the background gradient shine through */
    border: var(--rainbow-border-size) solid transparent;
    border-radius: 6px;
    margin-top: calc(-1 * var(--rainbow-border-size));
}

#my_ext-star_container > * :hover {
    opacity: 90%;
}

#my_ext-sparkle_container {
    position: absolute;
    background-position: center;
    background-size: cover;
    inset: -100px;
}

#repository-details-container {
    margin-top: var(--rainbow-border-size);
}